@import './variables.scss';
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint == xphone {
    @media(max-width: 31em) { @content }; 
    overflow: hidden;
  }
  @if $breakpoint == phone {
    @media(max-width: 37.5em) { @content }; 
    // overflow: hidden;
  }
  @if $breakpoint == tab-port {
    @media(max-width: 56.25em) { @content }; //900px
    // overflow: hidden;
  }
  @if $breakpoint == tab-port-big {
    @media(max-width: 65.25em) { @content }; //900px
  }
  @if $breakpoint ==  tab-land{
    @media(max-width: 75em) { @content }; //1200px
  }
      @if $breakpoint ==  big {
        @media(min-width: 90.5em) { @content }; //1800 +
      }
      @if $breakpoint ==  big-desktop {
        @media(min-width: 112.5em) { @content }; //1800 +
      }
}

$font: quiche-sans,sans-serif;
$font-weight: 700;
$transform: translate(-50%, -50%);
$absolute: absolute;
$background: linear-gradient(to right, $orange2, $orange1); 
$webclip: text;
$clip:  text;
$height: 1;
$color: transparent;

@mixin text-color ($size){
  font-family: $font;
  font-size: $size;
  font-weight: $font-weight;
  transform: $transform;
  position: $absolute;
  background: $background;
   background-clip: $clip;
   -webkit-background-clip: text;
   color: $color;
   line-height: $height;
}
@mixin hardwareAccel() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
	// Improve aliasing on mobile/tablet devices
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
	// Transforms need to be block-level to work
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
}